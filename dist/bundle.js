(()=>{"use strict";var t,e,s,n,i,o;!function(t){t.background="background",t.userpic="userpic",t.name="name",t.at="at"}(t||(t={}));class a extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get observedAttributes(){return Object.keys(t)}attributeChangedCallback(t,e,s){this[t]=s,this.render()}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n            <link rel="stylesheet" href="../src/components/userInfo/userInfo.css">\n            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">\n            <section class='container'>\n            <img src="${this.background||"No Image"}" alt="Background">\n            <div class='container-background'>\n            <div class='container-userpic'>\n                <a href="#">\n                    <img src="${this.userpic||"No Image"}" alt="User Picture">\n                </a>\n                    </div>\n                    <div class='container-text'>\n                        <h2>${this.name||"No Name"}</h2>\n                        <p>${this.at||"No At"}</p>\n                    </div>\n                </div>\n            </section>\n            `)}}customElements.define("user-info",a),function(t){t.icon="icon",t.img="img",t.input="input"}(e||(e={}));class c extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get observedAttributes(){return Object.keys(e)}attributeChangedCallback(t,e,s){this[t]=s,this.render()}connectedCallback(){this.render(),this.addEventListeners()}addEventListeners(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".container-img-icon");e&&e.addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("toggle-user-container",{bubbles:!0,composed:!0}))}))}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n                <link rel="stylesheet" href="../src/components/navBar/navBar.css">\n                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">\n                <section class='container'>\n                    <button class='container-img-icon' aria-label="Toggle User Container">\n                        <i class="fa-solid fa-bars"></i>\n                    </button>\n    \n                    <div class='container-img-logo'>\n                        <img src="${this.img||"No Image"}" alt="BookLoop Logo">\n                    </div>\n    \n                    <div class='container-search'>\n                        <i class="fa-solid fa-magnifying-glass" style="color: #322316;"></i>\n                        <input type="text" placeholder="${this.input||"Search"}">\n                    </div>\n                </section>\n            `)}}customElements.define("nav-bar",c),function(t){t.home="home",t.clubs="clubs",t.discover="discover",t.help="help",t.setting="setting"}(s||(s={}));class r extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get observedAttributes(){return Object.keys(s)}attributeChangedCallback(t,e,s){this[t]=s,this.render()}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n            <link rel="stylesheet" href="../src/components/userMenu/userMenu.css">\n            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">\n            <section class='container'>\n\n                <div class='action-user-element'>    \n                    <div class='home-element'>\n                        <a href="${this.home||"No Link"}"><i class="fa-solid fa-house" style="color: #ffc320;"></i>Home</a>\n                    </div>\n                    <div class='clubs-element'>\n                        <a href="${this.clubs||"No Link"}"><i class="fa-solid fa-user" style="color: #6471c7;"></i>Clubs</a>\n                    </div>\n                    <div class='discover-element'>\n                        <a href="${this.discover||"No Link"}"><i class="fa-solid fa-compass" style="color: #c2be4d;"></i>Discover</a>\n                    </div>\n                </div>\n\n                <div class='setting-user-element'>\n                    <div class='help-element'>\n                        <a href="${this.help||"No Link"}"><i class="fa-solid fa-circle-question" style="color: #322316;"></i>Help & Support</a>\n                    </div>\n                    <div class='setting-element'>\n                        <a href="${this.setting||"No Link"}"><i class="fa-solid fa-gear" style="color: #332231;"></i>Settings & Privacy</a>\n                    </div>\n                </div>  \n\n            </section>\n            `)}}customElements.define("user-menu",r),function(t){t.userpic="userpic",t.text="text",t.buttontext="buttontext",t.buttonimages="buttonimages",t.inputtext="inputtext",t.inputimage="inputimage",t.club="club",t.post="post"}(n||(n={}));class l extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get observedAttributes(){return Object.keys(n)}attributeChangedCallback(t,e,s){this[t]=s,this.render()}connectedCallback(){this.render(),this.addFileInputListener(),this.addButtonListeners(),this.setDefaultButton(),this.addFloatingButtonListener(),this.handleResize(),window.addEventListener("resize",(()=>this.handleResize()))}handleResize(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".container");window.innerWidth>500?null==e||e.classList.remove("hidden"):null==e||e.classList.add("hidden")}addButtonListeners(){var t,e,s,n;const i=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".button-text"),o=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(".button-images"),a=null===(s=this.shadowRoot)||void 0===s?void 0:s.querySelector(".input-wrapper-inputtext"),c=null===(n=this.shadowRoot)||void 0===n?void 0:n.querySelector(".input-wrapper-inputimage");null==i||i.addEventListener("click",(()=>{null==a||a.classList.remove("hidden"),null==c||c.classList.add("hidden"),this.updateButtonStyles(i,o)})),null==o||o.addEventListener("click",(()=>{null==a||a.classList.add("hidden"),null==c||c.classList.remove("hidden"),this.updateButtonStyles(o,i)}))}updateButtonStyles(t,e){t&&t.classList.add("selected"),e&&e.classList.remove("selected")}setDefaultButton(){var t,e,s;const n=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".button-text"),i=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(".input-wrapper-inputtext"),o=null===(s=this.shadowRoot)||void 0===s?void 0:s.querySelector(".input-wrapper-inputimage");n&&(this.updateButtonStyles(n,null),null==i||i.classList.remove("hidden"),null==o||o.classList.add("hidden"))}addFileInputListener(){var t,e;const s=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".file-input"),n=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(".file-placeholder");s&&n&&s.addEventListener("change",(t=>{const e=t.target;e.files&&e.files.length>0?n.textContent=e.files[0].name:n.textContent=this.inputimage||"No input"}))}addFloatingButtonListener(){var t,e;const s=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".floating-button"),n=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(".container");null==s||s.addEventListener("click",(()=>{n&&n.classList.toggle("hidden")}))}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n            <link rel="stylesheet" href="../src/components/newPost/newPost.css">\n            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">\n            <form class='container'>\n                <div class='container-userpic'>\n                    <a href="#">\n                        <img src="${this.userpic||"No User Pic"}" alt="User Picture">\n                    </a>\n                    <h2>${this.text||"No Text"}</h2>\n                </div>\n                <div class='container-button'>\n                    <button type="button" class="button-text">${this.buttontext||"No Button Text"}</button>\n                    <button type="button" class="button-images">${this.buttonimages||"No Button Images"}</button>\n                </div>\n                <div class='container-inputs'>\n                    <div class="input-wrapper-inputtext">\n                        <i class="fa-solid fa-message" style="color: #999;"></i>\n                        <input type="text" placeholder="${this.inputtext||"No input"}" name="textInput">\n                    </div>\n                    <label class="input-wrapper-inputimage hidden">\n                        <i class="fa-solid fa-cloud-arrow-up" style="color: #999;"></i>\n                        <span class="file-placeholder">${this.inputimage||"No input"}</span>\n                        <input type="file" class="file-input" name="imageInput">\n                    </label>\n                </div>\n                <div class='container-buttons-post'>\n                    <button type="button">${this.club||"No Club"}<i class="fa-solid fa-users" style="color: #F9F5F3;"></i></button>\n                    <button type="submit">${this.post||"No Post"}</button>\n                </div>\n            </form>\n            <div class="floating-button">\n                <i class="fa-solid fa-message" style="color: #999;"></i>\n            </div>\n            `)}}customElements.define("new-post",l),function(t){t.image="image",t.clubpic="clubpic",t.clubname="clubname",t.likes="likes",t.comments="comments",t.author="author",t.desc="desc"}(i||(i={}));class d extends HTMLElement{constructor(){super(),this.comments=[],this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.addCloseHandler(),this.addCommentHandler()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n                <link rel="stylesheet" href="../src/components/postPopup/postPopup.css">\n                <div class="popup-overlay">\n                    <div class="popup">\n                        <div class="popup-izq">\n                            <div class="post-img">\n                                <img src="${this.image}" alt="Post Image" class="post-image">\n                            </div>\n                        </div>\n                        <div class="popup-der">\n                            <button id="closePopup" class="close-btn">X</button>\n                            <div class="club-info">\n                                <img src="${this.clubpic}" alt="Club Picture" class="club-pic">\n                                <h2>${this.clubname}</h2>\n                            </div>\n                            <div class="comments-section">\n                                <div class="comments-list">\n                                    ${this.comments.map((t=>`<p>@${this.author}${t}</p>`)).join("")}\n                                </div>\n                            </div>\n                            <div class="post-description">\n                                <p class="post-author">@${this.author}</p>\n                                <p class="post-desc">${this.desc}</p>\n                            </div>\n                            <div class="input-wrapper-inputtext">\n                                <i class="fa-solid fa-message" style="color: #999;"></i>\n                                <input type="text" placeholder="Say something!" name="textInput" id="popupCommentInput">\n                                <button type="submit" id="sendPopupComment">Send</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            `)}addCloseHandler(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("#closePopup");null==e||e.addEventListener("click",(()=>{this.remove()}))}addCommentHandler(){var t,e;const s=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("#popupCommentInput"),n=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector("#sendPopupComment");s&&n&&(n.addEventListener("click",(()=>{const t=s.value.trim();t&&(this.comments.push(t),this.render(),s.value="")})),s.addEventListener("keypress",(t=>{"Enter"===t.key&&n.click()})))}setPopupData(t,e,s,n,i,o,a){this.comments=t,this.clubname=e,this.image=s,this.clubpic=n,this.author=i,this.desc=o,this.render()}}customElements.define("post-popup",d),function(t){t.clubpic="clubpic",t.clubname="clubname",t.image="image",t.likes="likes",t.comments="comments",t.author="author",t.desc="desc"}(o||(o={}));class u extends HTMLElement{constructor(){super(),this.usercomments=[],this.likes=0,this.liked=!1,this.attachShadow({mode:"open"})}static get observedAttributes(){return Object.keys(o)}attributeChangedCallback(t,e,s){switch(t){case o.clubpic:this.clubpic=s;break;case o.clubname:this.clubname=s;break;case o.image:this.image=s;break;case o.likes:this.likes=s?Number(s):0;break;case o.comments:this.comments=s?Number(s):0;break;case o.author:this.author=s;break;case o.desc:this.desc=s}this.render()}connectedCallback(){this.render(),this.addComments(),this.addLikeHandler()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n                        <link rel="stylesheet" href="../src/components/postComponent/post.css">\n                        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">\n                        \n                        <section class="post--container">\n                        <div class="post--header">\n                        <img src="${this.clubpic}" alt="Club Picture" class="club-pic">\n                        <div class="club-info">\n                        <h2>${this.clubname}</h2>\n                        </div>\n                        </div>\n                        <img src="${this.image}" alt="Post Image" class="post-image">\n                        <div class="post--body">\n                        <div class="post--info">\n                        <button class="likes" id="likeButton">\n                        <i class="${this.liked?"fas fa-heart":"far fa-heart"}"></i> \n                        ${this.likes}\n                        </button>\n                        <span class="comments"><i class="fas fa-comment"></i> ${this.usercomments.length}</span>\n                        </div>\n                        <div class="post--author">\n                        <h3>@${this.author}</h3>\n                        <p>${this.desc}</p>\n                        </div>\n                        </div>  \n                        <div class='container-inputs'>\n                        <div class="input-wrapper-inputtext">\n                        <i class="fa-solid fa-message" style="color: #999;"></i>\n                        <input type="text" placeholder="Say something!" name="textInput" id="commentInput">\n                        <button type="submit" id="sendComment">Send</button>\n                        </div>\n                        <div class="comments-list">\n                        ${this.usercomments.map((t=>`<p class="comment-item">@${this.author}: ${t}</p>`)).join("")}\n                        </div>\n                        </div>\n                        </section>\n                        `,this.addImageClickHandler(),this.addLikeHandler(),this.addComments())}addImageClickHandler(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".post-image");e&&e.addEventListener("click",(t=>{t.stopPropagation();const e=document.createElement("post-popup");e.setPopupData(this.usercomments,this.clubname,this.image,this.clubpic,this.author,this.desc,this.liked),document.body.appendChild(e),console.log("clicked")}))}addComments(){var t,e;const s=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("#commentInput"),n=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector("#sendComment");s&&n&&(n.addEventListener("click",(()=>{const t=s.value.trim();t&&(this.usercomments.push(t),this.comments=this.usercomments.length,this.render(),s.value="")})),s.addEventListener("keypress",(t=>{"Enter"===t.key&&n.click()})))}addLikeHandler(){var t;const e=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("#likeButton");e&&e.addEventListener("click",(t=>{this.toggleLike(),this.likes+=this.liked?1:-1,this.render()}))}toggleLike(){this.liked=!this.liked}}customElements.define("post-component",u);const h=[{uid:0,background:"../src/assets/user/background/mauricio-santos-N1gFsYf9AI0-unsplash.jpg",userpic:"../src/assets/user/pics/dwayne-joe-LTY3S3mFHGY-unsplash.jpg",name:"Mara Volkov",at:"@MaraVolkov"}],m=[{clubpic:"../src/assets/clubs/greatgatsbyclubpic.jpg",clubname:"The great Gatsby",image:"../src/assets/dataIMG/post1.jpg",likes:20,comments:7,author:"Mara Volkov",desc:"Look at my new collection!"},{clubpic:"../src/assets/clubs/greatgatsbyclubpic.jpg",clubname:"The great Gatsby",image:"../src/assets/dataIMG/post2.jpg",likes:921,comments:300,author:"Luisa Booker",desc:"Just keep on mind whatever he wanted to tell us with this quote..."},{clubpic:"../src/assets/clubs/greatgatsbyclubpic.jpg",clubname:"The great Gatsby",image:"../src/assets/dataIMG/post3.jpg",likes:2983,comments:892,author:"Mark123",desc:"Do yall ever wonder what could've happened if they never kissed?"},{clubpic:"../src/assets/clubs/greatgatsbyclubpic.jpg",clubname:"The great Gatsby",image:"../src/assets/dataIMG/post3.jpg",likes:2983,comments:892,author:"Mark123",desc:"Do yall ever wonder what could've happened if they never kissed?"}];var p;!function(t){t.clubpic="clubpic",t.name="name",t.members="members"}(p||(p={}));class b extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get observedAttributes(){return Object.keys(p)}attributeChangedCallback(t,e,s){switch(t){case p.clubpic:this.clubpic=s;break;case p.name:this.name=s;break;case p.members:this.members=s?Number(s):0}}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n                <link rel="stylesheet" href="../src/components/elements/clubInfo/clubInfo.css">\n                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">\n                <section class="clubs--info">\n                <img src="${this.clubpic}" alt="Club picture">\n                <div class="clubs--info__text">\n                    <h4>${this.name}</h4>\n                    <p>${this.members} Club members</p>\n                    </div>\n                </section>\n            `)}}customElements.define("club-info",b);const v=[{uid:0,name:"Harry Potter",bannerpic:"../src/assets/clubs/potterbanner.webp",clubpic:"../src/assets/clubs/harry-potterclubpic.webp",members:2938293},{uid:1,name:"The Great Gatsby",bannerpic:"../src/assets/clubs/greatgatsbybanner.webp",clubpic:"../src/assets/clubs/greatgatsbyclubpic.jpg",members:353223},{uid:2,name:"Harry Potter",bannerpic:"../src/assets/clubs/prideandprejudice-banner.webp",clubpic:"../src/assets/clubs/prideandprejudice-clubpic.webp",members:2938293}];var g;!function(t){t.cardtitle="cardtitle",t.buttontext="buttontext",t.cardcolor="cardcolor",t.buttoncolor="buttoncolor"}(g||(g={}));class f extends HTMLElement{constructor(){super(),this.clubs=v,this.cardtitle="",this.buttontext="",this.cardcolor="black",this.buttoncolor="gray",this.attachShadow({mode:"open"})}static get observedAttributes(){return["cardtitle","buttontext","cardcolor","buttoncolor"]}attributeChangedCallback(t,e,s){s&&("cardtitle"===t?this.cardtitle=s:"buttontext"===t?this.buttontext=s:"cardcolor"===t?this.cardcolor=s:"buttoncolor"===t&&(this.buttoncolor=s),this.render())}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n                <link rel="stylesheet" href="../src/components/clubsCard/clubsCard.css">\n                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">\n\n                <section>\n                    <div class="card">\n                        <h3 style="color: ${this.cardcolor};">${this.cardtitle||"Default Title"}</h3>\n                    </div>\n                    <div class="club-list">\n                        ${this.clubs.map((t=>`\n                            <div class="club-info-container">\n                                <club-info\n                                    clubpic="${t.clubpic}"\n                                    name="${t.name}"\n                                    members="${t.members}"\n                                ></club-info>\n                                <i class="fas fa-bookmark bookmark-icon" data-club-name="${t.name}" aria-hidden="true"></i>\n                            </div>\n                        `)).join("")}\n                        <button style="background-color: ${this.buttoncolor};">${this.buttontext||"Default Button"}</button>\n                    </div>\n                </section>\n            `,this.shadowRoot.querySelectorAll(".bookmark-icon").forEach((t=>{t.addEventListener("click",(()=>{t.classList.toggle("filled")}))})))}}customElements.define("clubs-card",f);class k extends HTMLElement{constructor(){super(),this.user=[],this.post=[],this.currentUserPic="",this.isUserContainerVisible=!0,this.attachShadow({mode:"open"}),this.currentUserPic=h[0].userpic,h.forEach((t=>{const e=this.ownerDocument.createElement("user-info");e.setAttribute("background",t.background),e.setAttribute("userpic",t.userpic),e.setAttribute("name",t.name),e.setAttribute("at",t.at),this.user.push(e)}))}connectedCallback(){this.render(),this.addEventListener("toggle-user-container",(()=>this.toggleUserContainer()))}toggleUserContainer(){var t,e,s;this.isUserContainerVisible=!this.isUserContainerVisible;const n=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector(".user-container"),i=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(".post-container"),o=null===(s=this.shadowRoot)||void 0===s?void 0:s.querySelector(".container");n&&i&&o&&(n.classList.toggle("hidden",!this.isUserContainerVisible),this.isUserContainerVisible?(i.classList.remove("expanded"),o.classList.remove("full-width")):(i.classList.add("expanded"),o.classList.add("full-width")))}render(){if(this.shadowRoot){const t=this.ownerDocument.createElement("nav-bar");t.setAttribute("icon","../src/assets/logos/big_logo.png"),t.setAttribute("img","../src/assets/logos/medium_logo.png"),t.setAttribute("input","Search");const e=this.ownerDocument.createElement("section");e.className="container";const s=this.ownerDocument.createElement("section");s.className="user-container",this.user.forEach((t=>{s.appendChild(t)}));const n=this.ownerDocument.createElement("user-menu");n.setAttribute("home","#"),n.setAttribute("clubs","#"),n.setAttribute("discover","#"),n.setAttribute("help","#"),n.setAttribute("setting","#"),s.appendChild(n),e.appendChild(s);const i=this.ownerDocument.createElement("section");i.className="post-container";const o=this.ownerDocument.createElement("new-post");o.setAttribute("userpic",this.currentUserPic),o.setAttribute("text","Create new post"),o.setAttribute("buttontext","Text"),o.setAttribute("buttonimages","Images"),o.setAttribute("inputtext","Share something..."),o.setAttribute("inputimage","Drag and drop or upload media"),o.setAttribute("club","Select a Club"),o.setAttribute("post","Post"),i.appendChild(o),e.appendChild(i);const a=this.ownerDocument.createElement("section");a.className="post-dashboard",m&&Array.isArray(m)?m.forEach((t=>{const e=this.ownerDocument.createElement("post-component");e.setAttribute("clubpic",t.clubpic),e.setAttribute("clubname",t.clubname),e.setAttribute("image",t.image),e.setAttribute("likes",t.likes.toString()),e.setAttribute("comments",t.comments.toString()),e.setAttribute("author",t.author),e.setAttribute("desc",t.desc),a.appendChild(e),this.post.push(e)})):console.error("dataPosts is not an array or is undefined"),i.appendChild(a);const c=this.ownerDocument.createElement("section");if(c.className="clubs-container",v&&Array.isArray(v)){const t=this.ownerDocument.createElement("clubs-card");t.setAttribute("cardtitle","Clubs"),t.setAttribute("buttontext","Your Clubs"),t.setAttribute("cardcolor","#6471C7"),t.setAttribute("buttoncolor","#6471C7"),c.appendChild(t);const e=this.ownerDocument.createElement("clubs-card");e.setAttribute("cardtitle","Discover"),e.setAttribute("buttontext","Discover now"),e.setAttribute("cardcolor","#C2BE4D"),e.setAttribute("buttoncolor","#C2BE4D"),c.appendChild(e)}console.log(c),e.appendChild(c),this.shadowRoot.innerHTML='\n            <link rel="stylesheet" href="../src/screens/main/main.css">\n            ',this.shadowRoot.appendChild(t),this.shadowRoot.appendChild(e)}}}customElements.define("main-page",k);class w extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML="\n            <main-page></main-page>\n            ")}}customElements.define("app-container",w)})();